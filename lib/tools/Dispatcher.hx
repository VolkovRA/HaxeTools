package tools;

import haxe.Constraints.Function;

/**
 * –î–∏—Å–ø–µ—Ç—á–µ—Ä —Å–æ–±—ã—Ç–∏–π. üì¢  
 * –û—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * –≤–Ω–µ—à–Ω–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
 * –¥–ª—è —Å–æ–±—ã—Ç–∏—è, –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ, —Å–ª—É—à–∞—Ç–µ–ª–∏ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è
 * –Ω–∞–ø—Ä—è–º—É—é.
 * - –í—ã–∑–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–±–µ–∫–∞, –∞ –Ω–µ –æ–±—ä–µ–∫—Ç–∞ —Å–æ–±—ã—Ç–∏—è.
 *   *(+–ë—ã—Å—Ç—Ä–æ–¥–µ–π—Å—Ç–≤–∏–µ)*
 * - –¢–∏–ø–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π.
 * - –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è.
 * 
 * –ü—Ä–∏–º–µ—Ä:
 * ```
 * var d:Dispatcher<Int->Void> = new Dispatcher();
 * d.on(function(num){
 *     trace(num);
 * })
 * d.emit(7); // out: 7
 * ```
 * 
 * –ø.—Å. –ù–∞ –∫–∞–∂–¥—ã–π –æ—Ç–¥–µ–ª—å–Ω—ã–π **—Ç–∏–ø** —Å–æ–±—ã—Ç–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å
 * —Å–æ–∑–¥–∞–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞.
 */
@:dce
class Dispatcher<T:Function>
{
    /**
     * –°–ø–∏—Å–æ–∫ —Å–ª—É—à–∞—Ç–µ–ª–µ–π.  
     * –ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å: `null`
     */
    private var a = new Array<Listener>();

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä.
     */
    public function new() {
    }

    /**
     * –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ.  
     * –ü–µ—Ä–µ–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
     * - –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–∞–Ω–µ–µ, –æ–Ω–∞
     *   –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –µ—â—ë —Ä–∞–∑! –≠—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –µ—ë
     *   –¥–≤–æ–π–Ω–æ–º—É –≤—ã–∑–æ–≤—É –ø—Ä–∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ
     *   —Å–æ–±—ã—Ç–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥: `has()`, –µ—Å–ª–∏
     *   –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–±–µ–∫–∞ –ø–µ—Ä–µ–¥
     *   –ø–æ–¥–ø–∏—Å–∫–æ–π.
     * - –í—ã–∑–æ–≤ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω: `null`
     * @param callback –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
     */
    public function on(callback:T):Void {
        if (callback == null)
            return;
        a.push({
            c: callback,
            r: false,
        });
    }

    /**
     * –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–æ–≤—ã–π –≤—ã–∑–æ–≤ –∫–æ–ª–±–µ–∫–∞.  
     * –≠—Ç–æ —Ç–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –º–µ—Ç–æ–¥: `on()`, —Ç–æ–ª—å–∫–æ
     * —ç—Ç–æ—Ç –∫–æ–ª–±–µ–∫ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—ë–Ω –ø–æ—Å–ª–µ
     * –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è.
     * @param callback –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–æ–≤–æ–≥–æ, –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
     */
    public function once(callback:T):Void {
        if (callback == null)
            return;
        a.push({
            c: callback,
            r: true,
        });
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.  
     * –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑
     * –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –±–æ–ª–µ–µ
     * –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞.
     * @param callback –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
     * @return –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: `true`, –µ—Å–ª–∏ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –æ–¥–Ω–∞
     *         –∏–ª–∏ –±–æ–ª–µ–µ —Ñ—É–Ω–∫—Ü–∏–π.
     */
    public function off(callback:T):Bool {
        if (callback == null)
            return false;

        var i = a.length;
        var r = false;
        while (i-- > 0) {
            if (a[i] == null || a[i].c != callback)
                continue;
            a[i] = null;
            r = true;
        }
        return r;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Å–ª—É—à–∞—Ç–µ–ª—è. *(–õ–∏–Ω–µ–π–Ω—ã–π –ø–æ–∏—Å–∫)*  
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: `true`, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
     * –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –æ–¥–∏–Ω –∏–ª–∏ –±–æ–ª–µ–µ —Ä–∞–∑.
     * @param callback –ü—Ä–æ–≤–µ—Ä—è–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
     * @return –§—É–Ω–∫—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ.
     */
    public function has(callback:T):Bool {
        if (callback == null)
            return false;

        var i = a.length;
        while (i-- > 0) {
            if (a[i] != null && a[i].c == callback)
                return true;
        }
        return false;
    }

    /**
     * –ü–æ—Å–ª–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ.  
     * –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤—ã–∑–æ–≤ –≤—Å–µ—Ö –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ
     * —Å–ª—É—à–∞—Ç–µ–ª–µ–π.
     * - –°–ª—É—à–∞—Ç–µ–ª–∏ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
     *   –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä.
     * - –ù–æ–≤—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–æ –≤—Ä–µ–º—è —Ç–µ–∫—É—â–µ–π
     *   –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –≤ —ç—Ç–æ–º –ø–æ—Ç–æ–∫–µ.
     * @param v1 –ü–∞—Ä–∞–º–µ—Ç—Ä 1, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Å–ª—É—à–∞—Ç–µ–ª–∏. *(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∏–ø—É —Å–ª—É—à–∞—Ç–µ–ª—è)*
     * @param v2 –ü–∞—Ä–∞–º–µ—Ç—Ä 2, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Å–ª—É—à–∞—Ç–µ–ª–∏. *(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∏–ø—É —Å–ª—É—à–∞—Ç–µ–ª—è)*
     * @param v3 –ü–∞—Ä–∞–º–µ—Ç—Ä 3, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Å–ª—É—à–∞—Ç–µ–ª–∏. *(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∏–ø—É —Å–ª—É—à–∞—Ç–µ–ª—è)*
     */
    public function emit(?v1:Dynamic, ?v2:Dynamic, ?v3:Dynamic):Void {
        var i = 0;
        var j = 0;
        var l = a.length;
        while (i < l) {
            var o = a[i];
            if (o == null) {
                i ++;
                continue;
            }

            if (o.r) {
                a[i] = null;
            }
            else {
                a[i] = null;
                a[j++] = o;
            }

            if (!NativeJS.isUnd(v3))
                o.c(v1, v2, v3);
            else if (!NativeJS.isUnd(v2))
                o.c(v1, v2);
            else if (!NativeJS.isUnd(v1))
                o.c(v1);
            else
                o.c();

            i ++;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–æ
        // –≤—Ä–µ–º—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏–∏
        // (–í–æ –≤—Ä–µ–º—è –≤—ã–∑–æ–≤–∞ –º–∞—Å—Å–∏–≤ –º–æ–≥ –±—ã—Ç—å –∏–∑–º–µ–Ω—ë–Ω)
        l = a.length;
        while (i < l)
            a[j++] = a[i++];

        // –ü–æ–¥—Ä–µ–∑–∞–µ–º –ª–∏—à–Ω–∏–µ null –≤ –º–∞—Å—Å–∏–≤–µ:
        if (j != l)
            a.resize(j);
    }
}

/**
 * –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ª—É—à–∞—Ç–µ–ª—å.
 */
@:dce
@:noCompletion
private typedef Listener = 
{
    /**
     * –ö–æ–ª–±–µ–∫ –¥–ª—è –≤—ã–∑–æ–≤–∞.
     */
    var c:Function;

    /**
     * –û–¥–∏–Ω–æ—á–Ω—ã–π –≤—ã–∑–æ–≤.
     */
    var r:Bool;
}